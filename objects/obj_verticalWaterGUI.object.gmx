<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_waterBase</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Basic Variables
depth = -9;

//Vertical Water GUI Variables
activated = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw Marker Gui
if(activated)
{
    //Variables
    markOffY = view_yview[0]+10; //40
    markOffX = view_xview[0]+view_wview[0]/2; //view_wview[0]/2
    markAlpha = 1; //.6
    playerX = (room_height-obj_player.y)/room_height;
    //playerX = (room_height-view_yview[0]-view_hview[0])/(room_height-view_hview[0]);
    waterX = (room_height-obj_water.y)/(room_height);
    bDist = 8; //Border
    
    //Corrective X Positions
    //PlayerX
    if(playerX &gt; 1 || playerX &lt; 0) //room_heihgt == 1
    {
        if(playerX &gt; 1/2){
            playerX = 1;
        }
        else{
            playerX = 0;
        }
    }
    //WaterX
    if(waterX &gt; 1 || waterX &lt; 0)
    {
        if(waterX &gt; 1/2){
            waterX = 1;
        }
        else{
            waterX = 0;
        }
    }
    
    draw_sprite_ext(spr_markerBoard,0,markOffX,markOffY,1,1,0,c_white,markAlpha);
    draw_sprite_ext(spr_markerPlayer,0,markOffX+bDist-sprite_get_width(spr_markerBoard)/2+(sprite_get_width(spr_markerBoard)-bDist*2)*playerX,markOffY,1,1,0,c_white,markAlpha);
    draw_sprite_ext(spr_markerWater,0,markOffX+bDist-sprite_get_width(spr_markerBoard)/2+(sprite_get_width(spr_markerBoard)-bDist*2)*waterX,markOffY,1,1,0,c_white,markAlpha);
    //draw_text(obj_player.x,obj_player.y-50,playerX);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
