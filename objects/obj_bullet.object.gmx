<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_missile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_obstacle</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Basic Variables
depth = -1.55;

//Bullet Variables
bulletSpeed = 7;
image_xscale = -1;

//Animation Variables
ogY = y;
vSpeed = 1;
vRate = .1;

//Create Smoke Array
/*
prevX = x;
smokePos = 0;
smokeAlarm = 5;
smokeTime = smokeAlarm;
smokeCount = 4;
fadeTime = 15;
for(i = 0;i &lt; smokeCount;i++)
{
    //SmokeArray Variables
    //0 - X
    //1 - Y
    //2 - fadeAlarm
    
    smokeArray[i,0] = x;
    smokeArray[i,1] = y;
    smokeArray[i,2] = 0;
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Move Bullet
prevX = x;
x += bulletSpeed*image_xscale;

//Kill When Offscreen
if(x &lt; 0-50 || x &gt; room_width+50)
{
    instance_destroy();
}

//Rocket Animation
vSpeed += vRate*sign(ogY-y);
y += vSpeed;

//Spit Out Smoke
/*if(smokeAlarm &gt; 0 &amp;&amp; prevX != x)
{
    smokeAlarm -= 1;
}
else
{
    //Generate More Smoke
    smokeArray[smokePos,0] = x;
    smokeArray[smokePos,1] = y;
    smokeArray[smokePos,2] = fadeTime;
      
    //Increment Array Pos
    smokePos++;
    if(smokePos &gt;= smokeCount)
    {
        smokePos = 0;
    }
    
    smokeAlarm = smokeTime;
}*/


/*
if(!place_meeting(x+bulletSpeed*image_xscale,y,obj_wall))
{
    x += bulletSpeed*image_xscale;
}
else if(!place_meeting(x+image_xscale,y,obj_wall))
{
    do
    {   
        x += image_xscale;
    }
    until place_meeting(x+image_xscale,y,obj_wall);
}

if(place_meeting(x+image_xscale,y,obj_wall))
{
    instance_destroy();
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_bullet</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//Draw Smoke Array
/*for(i = 0;i &lt; smokeCount;i++)
{
    //Check If Smoke Should Be Drawn
    if(smokeArray[i,2] &gt; 0)
    {       
        //Manipulate Smoke Vars
        smokeAlpha = smokeArray[i,2]/smokeTime;
        startScale = 1.5;
        endScale = 1.5
        smokeScale = startScale+(endScale-startScale)*((smokeTime-smokeArray[i,2])/smokeTime);
        smokeAngle = image_xscale*60*(smokeArray[i,2]/smokeTime);
    
        //Draw Smoke
        draw_sprite_ext(spr_bullet_smoke,0,smokeArray[i,0],smokeArray[i,1],
        smokeScale,smokeScale,smokeAngle,c_white,smokeAlpha);
        
        //Deduct Fade Alarm
        smokeArray[i,2] -= 1;
    }
}*/


//Draw Self
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
