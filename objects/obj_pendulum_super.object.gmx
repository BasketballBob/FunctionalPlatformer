<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pendulum_super</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_obstacle</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Basic Variables
depth = -2;
image_speed = 0;

//Pendulum Vars
locked = false;
centerAngle = 0;
swingSpeed = 6;
swingRate = .2;

//Randomly Select Direction
dir = irandom_range(0,1);
if(dir == 1)
{
    image_xscale *= -1;
}

//Generate Tracer Array (Edit Tracer Alpha Draw Function)
tracerSize = 2; //3
tracerStart = .5;
for(i=0;i&lt;tracerSize;i++)
{
    tracerAngle[i] = image_angle;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Shift Tracer Array
for(i=tracerSize-1;i&gt;-1;i--)
{
    tracerAngle[i+1] = tracerAngle[i];
}
tracerAngle[0] = image_angle;

//Lock Pendulum
if(locked &amp;&amp; round(swingSpeed/swingRate) == 0)
{   
    exit;
}

//Swing The Pendulum
swingSpeed -= swingRate*sign(image_angle-centerAngle);
image_angle += swingSpeed;

if(swingSpeed == 0) 
{   
    show_debug_message("GREEK");
    show_debug_message(image_angle);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw Tracer
for(i=0;i&lt;tracerSize;i++)
{
    draw_sprite_ext(spr_pendulum_super,0,x,y,image_xscale,1,tracerAngle[i],c_white,tracerStart-i*(tracerStart/tracerSize+1));
}

//Draw Self
draw_self();


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
