<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_arrowPlatform2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//THE FOLLOWING PLATFORMING CODE EXISTS THANKS TO
//SHAUN SPAULDING AND HIS PLATFORM TUTORIAL
sprite_index = -1;
image_speed = 0;
depth = -1;

//Vertical Moving Platform Vars
vSpeed = -2; 
yMin = y-40; //y-irandom_range(10,120); //-50
yMax = y+40; //y+irandom_range(10,120); //50

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Control Player Collision
if(instance_exists(obj_player))
{
    if(obj_player.y+obj_player.sprite_height/2 &gt; y || obj_player.down)//-sprite_height/2)
    {
        //sprite_index = spr_platform;
        //image_index = 1;
        sprite_index = -1;
        image_index = 0;
    }
    else
    {
        //sprite_index = -1;
        //image_index = 0;
        sprite_index = spr_arrowPlatform2;
        image_index = 1;
    }
}

//Move Player
if(place_meeting(x,y-1,obj_player))
{
    obj_player.y += vSpeed;
}

//Control Movement
if(y+vSpeed &gt; yMin &amp;&amp; y+vSpeed &lt; yMax)
{
    y += vSpeed;
}
else
{
    if(y+vSpeed &lt;= yMin)
    {
        y = yMin;
    }
    else
    {
        y = yMax;
    }
    vSpeed *= -1;
}   


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw Sprite
draw_sprite_ext(spr_arrowPlatform2,image_index,x,y,image_xscale,image_yscale,0,c_white,1);
//spr_arrowPlatform
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
