<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_transitionBlack</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Basic Variables
depth = -10;
image_alpha = 0;
image_xscale = (view_wview[0]/2)/sprite_width;
image_yscale = view_hview[0]/sprite_height;
moveX = view_xview[0]; //Edgecase that tracks transition with screen
ogX = 0; //
ogY = view_yview[0];
x = ogX; //ogX;
y = ogY;

//Transition Variables
xOff = -view_wview[0]/2;
//yOff = 0;
moveSpeed = 0;
moveRate = 1;
moveDelay = 4;
moveAlarm = 0;
moveDist = view_wview[0]/2;
deathTime = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
//Move Doors
if(xOff+sprite_width &lt; moveDist)
{
    //Increase Movement 
    if(moveAlarm &gt; 0)
    {
        moveAlarm -= 1;
    }
    else
    {
        moveSpeed += moveRate;
        moveAlarm = moveDelay;
    }
    
    //Move Door
    if(xOff+sprite_width+moveSpeed &lt; moveDist)
    {
        xOff += moveSpeed;
    }
    else
    {
        xOff = moveDist-sprite_width;
    }   
}
else
{   
    //Give Time For Transition
    if(deathTime &gt; 0)
    {
        deathTime -= 1;
    }
    else
    {   
        if(room_exists(room_next(room)))
        {
            room_goto_next();
        }
    }
}


//Update MoveX
moveX = view_xview[0];

//Manage Door Location
x = moveX+xOff; //ogX+xOff
y = view_yview[0]; //ogY+yOff;

//Manage Opacity
image_alpha = (xOff+moveDist)/(moveDist);

//Draw Self
draw_self();

//Draw Partner Door
draw_sprite_ext(sprite_index,0,moveX+view_wview[0]/2-xOff,y,image_xscale,image_yscale,0,c_white,image_alpha);

//draw_text(100,100,view_wview[0]-xOff);
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//Move Doors
if(xOff+sprite_width &lt; moveDist)
{
    //Increase Movement 
    if(moveAlarm &gt; 0)
    {
        moveAlarm -= 1;
    }
    else
    {
        moveSpeed += moveRate;
        moveAlarm = moveDelay;
    }
    
    //Move Door
    if(xOff+sprite_width+moveSpeed &lt; moveDist)
    {
        xOff += moveSpeed;
    }
    else
    {
        xOff = moveDist-sprite_width;
    }   
}
else
{   
    //Give Time For Transition
    if(deathTime &gt; 0)
    {
        deathTime -= 1;
    }
    else
    {   
        if(room_exists(room_next(room)))
        {
            room_goto_next();
        }
    }
}


//Update MoveX
moveX = view_xview[0];

//Manage Door Location
x = moveX+xOff; //ogX+xOff
y = view_yview[0]; //ogY+yOff;

//Manage Opacity
image_alpha = (xOff+moveDist)/(moveDist);

//Draw Self
draw_self();

//Draw Partner Door
draw_sprite_ext(sprite_index,0,moveX+view_wview[0]/2-xOff,y,image_xscale,image_yscale,0,c_white,image_alpha);

//draw_text(100,100,view_wview[0]-xOff);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
