<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_missileLauncher</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Basic Variables
image_speed = 0;
depth = -1.5; //Rocket Depth = -1.55
relativeX = x-view_xview[0];
ogX = x;
ogY = -50;
dX = x;
dY = y;
x = ogX;
y = ogY;

//Rocket Launcher Variables
rocketAlarm = 5; //20
rocketTime = rocketAlarm;
hSpeed = 0;
vSpeed = 0;
moveTime = 30;

//Create Rocket backing
/*backing = instance_create(x,y,obj_rocketLauncher_backing);
backing.x = x;
backing.y = y;
backing.image_index = 2;
backing.image_speed = 0;*/

//Calculate Initial Speeds
moveTotal = 0;
for(i = 0;i &lt; moveTime;i++)
{
    moveTotal += i+1;
}
//hRate = (dX-ogX)/moveTotal;
//hSpeed = hRate*moveTime;
vRate = (dY-ogY)/moveTotal;
vSpeed = vRate*moveTime;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//Manage Horizontal Position
x = view_xview[0]+relativeX;

//Deploy 
if(round(y) != dY) //round(x) != dX || 
{
    //x += hSpeed;
    //hSpeed -= hRate;
    y += vSpeed;
    vSpeed -= vRate;
}

//Shoot Rocket
else if(rocketAlarm &gt; 0)
{
    //Create Rocket Instance
    if(rocketAlarm == rocketTime)
    {   
        tvObj = instance_create(x-1*image_xscale,y+3,obj_bullet);
        tvObj.image_xscale = image_xscale;        
        image_index = 1; 
    }
    
    rocketAlarm -= 1;
}   

//Retreat
else 
{
    y += vSpeed;
    vSpeed -= vRate; 
}


//Manage Backing
/*backing.x = x;
backing.y = y;
backing.image_xscale = image_xscale;
backing.depth = depth+.1;

//Backing Depth
if(rocketAlarm &gt; 10) //RocketAlarm = 20;
{
    backing.depth = depth+.1;
}
else backing.depth = depth+.01;*/

//Kill Once Retreated
if(y &lt; ogY)
{
    //instance_destroy(backing);
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//ClawX Edgecase (-1 dir is one pixel off)
clawX = x;
if(image_xscale == -1) clawX = x-1;

//Draw Boss Wire
clawY = y+2-sprite_get_height(sprite_index)/2;
draw_sprite_ext(spr_clawWire,0,clawX,clawY,1,round(clawY-ogY)/sprite_get_height(spr_clawWire),0,c_white,1);


//Draw Self
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
