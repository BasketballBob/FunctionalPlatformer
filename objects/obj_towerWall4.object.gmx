<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_towerWall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Tile Set Variables
image_alpha = 0;
width = floor(image_xscale);
height = floor(image_yscale);
xp = 0;
yp = 0;

//exit;
//Draw Tile Set (CONSIDER CODING A DRAW FUNCTION INSTEAD)(POSSIBLY)
for(xp = 0;xp &lt; width;xp++)
{
    for(yp = 0;yp &lt; height;yp++)
    {
        //instance_create(x+xp*20,y+yp*20,obj_wallTile);
        
        
        //Tiling Vars
        ts = 10; //(tileSize)
        ts2 = ts*2;
        tileSprite = 0;
        up = position_meeting(x+xp*ts2+ts,y+yp*ts2+ts-ts-1,obj_towerWall4); //$
        down = position_meeting(x+xp*ts2+ts,y+yp*ts2+ts+ts+1,obj_towerWall4); //$
        right = position_meeting(x+xp*ts2+ts+ts+1,y+yp*ts2+ts,obj_towerWall4); //$
        left = position_meeting(x+xp*ts2+ts-ts-1,y+yp*ts2+ts,obj_towerWall4); //$

        //Determine Tile Value
        //Tiling Manager
if(up &amp;&amp; !down &amp;&amp; !right &amp;&amp; !left) //1 $
{
    tileSprite = 1;
}
else if(!up &amp;&amp; !down &amp;&amp; right &amp;&amp; !left) //2 $
{
    tileSprite = 2;
}
else if(!up &amp;&amp; down &amp;&amp; !right &amp;&amp; !left) //3 $
{
    tileSprite = 3;
}
else if(!up &amp;&amp; !down &amp;&amp; !right &amp;&amp; left) //4 $
{
    tileSprite = 4;
}
else if(up &amp;&amp; !down &amp;&amp; right &amp;&amp; !left) //5 $
{
    tileSprite = 5;
}
else if(up &amp;&amp; down &amp;&amp; !right &amp;&amp; !left) //6 $
{
    tileSprite = 6;
}
else if(up &amp;&amp; !down &amp;&amp; !right &amp;&amp; left) //7 $
{
    tileSprite = 7;
}
else if(!up &amp;&amp; down &amp;&amp; right &amp;&amp; !left) //8 $
{
    tileSprite = 8;
}   
else if(!up &amp;&amp; !down &amp;&amp; right &amp;&amp; left) //9 $
{
    tileSprite = 9;
}
else if(!up &amp;&amp; down &amp;&amp; !right &amp;&amp; left) //10 $
{
    tileSprite = 10;
}
else if(up &amp;&amp; down &amp;&amp; right &amp;&amp; !left) //11 $
{
    tileSprite = 11;
}
else if(!up &amp;&amp; down &amp;&amp; right &amp;&amp; left) //12 $
{
    tileSprite = 12;
}
else if(up &amp;&amp; down &amp;&amp; !right &amp;&amp; left) //13 $
{
    tileSprite = 13;
}
else if(up &amp;&amp; !down &amp;&amp; right &amp;&amp; left) //14 $
{
    tileSprite = 14;
}
else if(up &amp;&amp; down &amp;&amp; right &amp;&amp; left) //15 $
{
    tileSprite = 15;
}
else //TILE ZERO
{
    tileSprite = 0;
}
        
        tile_add(bg_towerTile_3,0+20*tileSprite,0,20,20,x+xp*20,y+yp*20,-.5);
    } //END OF FOR LOOP 1
}   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
