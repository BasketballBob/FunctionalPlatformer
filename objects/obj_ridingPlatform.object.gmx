<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_arrowPlatform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//THE FOLLOWING PLATFORMING CODE EXISTS THANKS TO
//SHAUN SPAULDING AND HIS PLATFORM TUTORIAL
sprite_index = -1;
//image_xscale = 5;
image_speed = 0;
depth = 1; //-1

//Moving Platform variables
activated = false;
hSpeed = 0; //2
hPlaceholder = hSpeed; //Edgecase variable for syncing player speeds
hRate = .01;
hCap = 2;

//Tile Set Variables
width = floor(image_xscale);
xp = 0;
tileSize = 20;
tileSprite = 0;

/*
for(xp = 0;xp &lt; width;xp++)
{
    if(xp == 0 &amp;&amp; !position_meeting(x-1,y,obj_wall))
    {
        tileSprite = 0;
    }
    else if(xp == width-1 &amp;&amp; !position_meeting(x+tileSize*width+1,y,obj_wall))
    {
        tileSprite = 2;
    }
    else
    {
        tileSprite = 1;
    }
    
    tile_add(bg_platformTile,tileSprite*tileSize,0,tileSize,tileSize,x+xp*tileSize,y,1);
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Activate Movement
if(place_meeting(x,y-1,obj_player) &amp;&amp; !activated)
{
    activated = true;
}

//Control Movement
if(activated &amp;&amp; hPlaceholder+hRate &lt; hCap)
{
    hPlaceholder += hRate;
    hSpeed = ceil(hPlaceholder)
    x += hSpeed;
}
else if(activated)
{
    hSpeed = hCap;
    x += hSpeed;
}
    
//Control Player Collision
if(instance_exists(obj_player))
{
    if(obj_player.y+obj_player.sprite_height/2 &gt; y || obj_player.down)//-sprite_height/2)
    {
        //sprite_index = spr_platform;
        //image_index = 1;
        sprite_index = -1;
        //image_index = 0;
    }
    else
    {
        //sprite_index = -1;
        //image_index = 0;
        sprite_index = spr_arrowPlatform;
        //image_index = 1;
    }
}

//Kill If Offscreen
if(x &gt; room_width+sprite_get_width(spr_arrowPlatform) || x &lt; 0-sprite_get_width(spr_arrowPlatform))
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw Sprite
draw_sprite_ext(spr_arrowPlatform,image_index,x,y,image_xscale,image_yscale,0,c_white,1);

draw_text(x-100,y-100,hSpeed);
draw_text(x-100,y-80,hPlaceholder);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
